config_version: "1"
interval: {{period}}
resource.url: "{{url}}/_health_report"
{{#if resource_ssl}}
resource.ssl:
  {{resource_ssl}}
{{/if}}

{{#if username}}
auth.basic.user: {{escape_string username}}
{{/if}}
{{#if password}}
auth.basic.password: {{escape_string password}}
{{/if}}
{{#if condition}}
condition: {{ condition }}
{{/if}}

redact: 
  fields: ~

program: |
  get(state.url)
  .as(resp, bytes(resp.Body)
  .decode_json().as(body,
    {
      "logstash":{
        "node": has(body.host)
        ? {
            "host":body.host,
            "ephemeral_id":body.ephemeral_id,
            "http_address":body.http_address,
            "name":body.name,
            "uuid":body.id,
            "version":body.version,
            "health_report"{
              "status":body.status,
              "indicators":has(body.indicators)
              ? {
                  "pipelines":has(body.indicators.pipelines)
                  ? body.indicators.pipelines.map(pipeline, 
                    {
                      "pipeline_id":pipelines.indicators.pipeline_id,
                      ### Pipeline id is not predicatable, need to verify this works
                      "status":body.indicators.pipelines.pipeline_id.status,
                      "symptom":body.indicators.pipelines.pipeline_id.symptom,
                      "details":has(body.indicators.pipelines.pipeline_id.details)
                      ? {
                          "state":body.indicators.pipelines.pipeline_id.details.state,
                          "flow":has(body.indicators.pipelines.pipeline_id.details.flow)
                          ? {
                              "worker_utilization":has(body.indicators.pipelines.pipeline_id.details.flow.worker_utilization)
                              ? {
                                  "lifetime":body.indicators.pipelines.pipeline_id.details.flow.worker_utilization.lifetime,
                                  "max":body.indicators.pipelines.pipeline_id.details.flow.worker_utilization.max,
                                  "last_min":body.indicators.pipelines.pipeline_id.flow.worker_utilization.last_min
                                }
                              : {}
                            }
                          : {}
                        }
                      : {},
                      "diagnosis":has(body.indicators.pipelines.pipeline_id.diagnosis)
                      ? {
                          "id":body.indicators.pipelines.pipeline_id.diagnosis.id,
                          "cause":body.indicators.pipelines.pipeline_id.diagnosis.cause,
                          "action":body.indicators.pipelines.pipeline_id.diagnosis.action,
                          "help_url":body.indicators.pipelines.pipeline_id.diagnosis.help_url
                        }
                      : {},
                      "impacts":has(body.indicators.pipelines.pipeline_id.impacts)
                      ? {
                          "id":body.indicators.pipelines.pipeline_id.impacts.id,
                          "severity":body.indicators.pipelines.pipeline_id.impacts.severity,
                          "description":body.indicators.pipelines.pipeline_id.impacts.description,
                          "areas":body.indicators.pipelines.pipeline_id.impacts.areas
                        }
                      : []
                    }
                  )
                  : []
                }
              : {}
            }
        }
      }
      }  
    )
  )



