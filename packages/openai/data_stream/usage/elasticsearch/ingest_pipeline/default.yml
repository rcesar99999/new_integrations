---
description: Pipeline for processing .
processors:
  - set:
      field: ecs.version
      value: 8.5.1
  - set:
      field: event.type
      value: [info]
  - set:
      field: event.kind
      value: metric
  - set:
      field: event.module
      value: openai
  - json:
      field: message
      target_field: json
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - date:
      field: json.aggregation_timestamp
      target_field: openai.aggregation_timestamp 
      formats:
        - epoch_second
        - epoch_millis
        - UNIX
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  -  rename:
      field: json.n_context_tokens_total
      target_field: openai.n_context_tokens_total
      ignore_missing: true
  -  rename:
      field: json.n_generated_tokens_total
      target_field: openai.n_generated_tokens_total
      ignore_missing: true
  -  rename:
      field: json.n_requests
      target_field: openai.n_requests
      ignore_missing: true
  -  rename:
      field: json.snapshot_id
      target_field: openai.snapshot_id
      ignore_missing: true
  - remove:
      field:
        - json
      ignore_missing: true
  - script:
      description: Drops null/empty values recursively.
      lang: painless
      source: |
        boolean drop(Object o) {
          if (o == null || o == "") {
            return true;
          } else if (o instanceof Map) {
            ((Map) o).values().removeIf(v -> drop(v));
            return (((Map) o).size() == 0);
          } else if (o instanceof List) {
            ((List) o).removeIf(v -> drop(v));
            return (((List) o).length == 0);
          }
          return false;
        }
        drop(ctx);
  - set:
      field: error.message
      value: "{{{_ingest.on_failure_message}}}"
  - append:
      field: event.kind
      value: pipeline_error
      allow_duplicates: false
